// https://www.shadertoy.com/view/lsf3D7
// Modified by ArthurTent
// Created by 4rknova
// License: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.
// by Nikos Papadopoulos, 4rknova / 2013
uniform float iAmplifiedTime;
uniform sampler2D iAudioData;
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;
uniform vec2 iResolution;
uniform vec2 iMouse;
varying vec2 vUv;


#define	PI         3.14159265359
#define THICKNESS  .4

void main( )
{
    //vec2 uv = vUv - vec2(.5);
    vec2 uv = -1.0 + 2.0* vUv;// -vec2(0.0, 0.5);
    //vec2 uv = vUv.xy / iResolution.xy * 2. - 1.;
    float u = uv.x / iResolution.x;
    //float u = vUv.x / iResolution.x
	//float u = fragCoord.x / iResolution.x;
	float fft = texture(iAudioData, vec2(u,.25)).x;
	float wav = texture(iAudioData, vec2(u,.75)).x;

	//vec2 uv = vUv.xy / iResolution.xy * 2. - 1.;
	vec2 wv = uv + vec2(0., wav - .5);

	float f = pow(abs(fft * tan(iAmplifiedTime - uv.y / wv.y)), .1);
	float h = pow(abs(wv.x - pow(abs(uv.y), cos(fft * PI * .25))), f);
	float g = abs(THICKNESS * .02 / (sin(wv.y) * h));

	vec3 c = g * clamp(vec3(fft, fract(fft) / fract(wav), g * wav), 0., 1.);

	gl_FragColor = vec4(c, 1);

}